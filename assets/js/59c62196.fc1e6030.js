"use strict";(self.webpackChunkmetode_skripsi=self.webpackChunkmetode_skripsi||[]).push([[4721],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return m}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),c=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(p.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=c(t),m=a,f=g["".concat(p,".").concat(m)]||g[m]||l[m]||i;return t?n.createElement(f,o(o({ref:r},u),{},{components:t})):n.createElement(f,o({ref:r},u))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=g;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},5076:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return l}});var n=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],s={title:"image parser"},p="image parser",c={unversionedId:"image-processing/image-parser",id:"image-processing/image-parser",title:"image parser",description:"basic usage",source:"@site/docs/image-processing/image-parser.md",sourceDirName:"image-processing",slug:"/image-processing/image-parser",permalink:"/docs/image-processing/image-parser",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/image-processing/image-parser.md",tags:[],version:"current",frontMatter:{title:"image parser"},sidebar:"tutorialSidebar",previous:{title:"image magic",permalink:"/docs/image-processing/image-magic"},next:{title:"Metode",permalink:"/docs/category/metode"}},u={},l=[{value:"basic usage",id:"basic-usage",level:4}],g={toc:l};function m(e){var r=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},g,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"image-parser"},"image parser"),(0,i.kt)("h4",{id:"basic-usage"},"basic usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},'\nuse Nagara\\Src\\Img\\ImgParser;\n\n// create object\n$img = new ImgParser;\n\n// put path image file\n$img->parseFile("indonesia.jpg"); # default no lang\n$img->parseFile("germany.jpg", "deu"); # spesific lang\n\n\n// print lang support\n$img->printLangSupport();\n\n// print about this tool\n$img->printAbout();\n\n')),(0,i.kt)("p",null,"recognition type :\nini akan memakan waktu untuk mengenali text secara random"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},'use Nagara\\Src\\Img\\ImgParser;\n\n# recognition\n$img = new ImgParser(\'path/to/tesseract\'); # example path exe\'C:\\Program Files\\Tesseract-OCR\\tesseract.exe\'\n$img->parseFile("english.jpg", "recognition"); # return array\n\n# result\n// $data = [\n// "status" => false,\n// "result" => $th->getMessage()\n// ]\n\n# cathing error\n$img = new ImgParser(\'path/to/tesseract\'); # example path exe\'C:\\Program Files\\Tesseract-OCR\\tesseract.exe\'\n$text = $img->parseFile("english.jpg", "recognition"); # return array\n\n# error message\nif ($text[\'status\'] == false) {\n   echo "gambar tidak mengandung text";\n}else{\n   echo "gambar mengandung text";\n}\n\n')),(0,i.kt)("p",null,"language support :"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"deu"),(0,i.kt)("li",{parentName:"ol"},"eng"),(0,i.kt)("li",{parentName:"ol"},"fra"),(0,i.kt)("li",{parentName:"ol"},"ita"),(0,i.kt)("li",{parentName:"ol"},"jpn"),(0,i.kt)("li",{parentName:"ol"},"spa")))}m.isMDXComponent=!0}}]);